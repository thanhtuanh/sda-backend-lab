

services:
  # === Service Discovery ===
  eureka-server:
    build: ./eureka-server
    ports:
      - "8761:8761"
    networks:
      - backend

  # === Produkt-Microservice ===
  product-service:
    build: ./product-service
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
    networks:
      - backend
    entrypoint: ["sh", "-c", "sleep 30 && java -jar /app/app.jar"]

  # === Order-Microservice ===
  order-service:
    build: ./order-service
    ports:
      - "8082:8082"
    depends_on:
      - eureka-server
      - product-service
    networks:
      - backend
    entrypoint: ["sh", "-c", "sleep 45 && java -jar /app/app.jar"]

  # === OpenTelemetry Tracing Backend (Tempo) ===
  tempo:
    image: grafana/tempo:2.7.1
    container_name: tempo
    ports:
      - "4317:4317"  # OTLP gRPC
      - "4318:4318" # OTLP HTTP
      - "3200:3200"  # Tempo Query UI (f√ºr Grafana)
    volumes:
      - ./tempo-config.yaml:/etc/tempo.yaml
    command: [ "-config.file=/etc/tempo.yaml" ]
    networks:
      - backend

  # === Metrik-Backend ===
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - backend

  # === Visualisierung via Grafana ===
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - backend

networks:
  backend:
    driver: bridge
